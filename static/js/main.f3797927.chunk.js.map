{"version":3,"sources":["components/CustomisedTables.js","components/Job.js","components/Menu.js","components/Home.js","components/About.js","components/Contact.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","background","default","TableRow","createData","name","location","rows","useStyles","makeStyles","table","minWidth","CustomizedTables","classes","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableBody","map","row","key","scope","Job","Menu","Nav","activeKey","Navbar","Brand","Link","eventKey","href","Item","title","Home","About","Contact","icon","faEnvelopeSquare","faMobileAlt","Footer","style","url","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3797927.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nfunction createData(name, location) {\r\n    return { name, location};\r\n}\r\n\r\nconst rows = [\r\n    createData('Full-Stack Java Developer', 'Stockholm'),\r\n    createData('.NET Developer', 'Gothenburg'),\r\n\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n});\r\n\r\nexport default function CustomizedTables() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell>Position</StyledTableCell>\r\n                        <StyledTableCell>Location</StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map(row => (\r\n                        <StyledTableRow key={row.name}>\r\n                            <StyledTableCell component=\"th\" scope=\"row\">\r\n                                {row.name}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell >{row.location}</StyledTableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}","import React from \"react\";\r\nimport CustomizedTables from \"./CustomisedTables\";\r\n\r\nfunction Job() {\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Open Positions</h2>\r\n            <CustomizedTables/>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Job ;","import React from \"react\";\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\n\r\nfunction Menu() {\r\n    //const handleSelect = eventKey => alert(`selected ${eventKey}`);\r\n\r\n    return (\r\n        <Nav activeKey=\"1\" className=\"navbar navbar-expand-lg navbar-light bg-dark\">\r\n            <Navbar.Brand><Nav.Link eventKey=\"1\" href=\"/\">\r\n                SPECTAC\r\n            </Nav.Link></Navbar.Brand>\r\n\r\n            <Nav.Item>\r\n                <Nav.Link href =\"/jobs\"  title=\"Item\">\r\n                    Jobs\r\n                </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                <Nav.Link href =\"/about\"  title=\"Item\">\r\n                    About\r\n                </Nav.Link>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                <Nav.Link href =\"/contact\"  title=\"Item\">\r\n                    Contact\r\n                </Nav.Link>\r\n            </Nav.Item>\r\n\r\n        </Nav>\r\n    );\r\n}\r\n\r\nexport default Menu;","import React from \"react\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>SPECTAC</h2>\r\n            <h5>Rekrytering och Bemanning</h5><br/><br/>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">Recruitment</h5>\r\n                            <p className=\"card-text\"></p>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">Staffing</h5>\r\n                            <p className=\"card-text\"></p>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div><br/>\r\n            <a href=\"/jobs\" className=\"btn btn-primary\">View Jobs</a>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\n\r\nfunction About() {\r\n    return (\r\n        <div className =\"jumbotron\">\r\n            Greetings from Spectac Rekrytering Och Bemanning! <br/><br/>\r\n\r\n            Spectac Rekrytering Och Bemanning is a provider of innovative consulting services for your manpower needs. Our company is a start-up in Sweden, but our founder has six years of HR experience from several practice industries such as retail, IT and construction. <br/><br/>\r\n\r\n            We understand industry needs and deliver solutions that leverage the business of our customers.\r\n\r\n            Furthermore, we pride ourselves on delivering high quality and value addition to our customers.\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEnvelopeSquare} from '@fortawesome/free-solid-svg-icons'\r\nimport { faMobileAlt} from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Contact() {\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <FontAwesomeIcon icon={faEnvelopeSquare} /> : jobs@spectac.se <br/>\r\n            <FontAwesomeIcon icon={faMobileAlt} /> : + 46 722975912\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Contact ;\r\n","import React from \"react\";\r\nimport { SocialIcon } from 'react-social-icons';\r\n\r\nfunction Footer(){\r\n\r\n    return(\r\n\r\n        <div className=\"navbar navbar-expand-lg navbar-light bg-dark fixed-bottom\">\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <p style={{color:'white'}}>\r\n                        Haganlundsgatan 18,\r\n                        Solna\r\n                    </p>\r\n                </div>\r\n                <div className=\"col-sm-6\" >\r\n                    <div className=\"float-right\">\r\n                    <p style={{color: \"white\"}}>Follow us on social media</p>  &nbsp;\r\n                    <SocialIcon url=\"https://www.linkedin.com/company/spectac-rekrytering-och-bemanning/\" />&nbsp;\r\n                    <SocialIcon url=\"https://www.facebook.com/spectacrecruitment/\" /> <br/>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './App.css';\r\nimport Job from './components/Job.js'\r\nimport Menu from './components/Menu.js'\r\nimport Home from './components/Home.js'\r\nimport About from './components/About.js'\r\nimport Contact from './components/Contact.js'\r\nimport Footer from './components/Footer.js'\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n\r\n      <Router>\r\n          <div>\r\n              <Menu/>\r\n\r\n              <hr />\r\n\r\n              {/*\r\n          A <Switch> looks through all its children <Route>\r\n          elements and renders the first one whose path\r\n          matches the current URL. Use a <Switch> any time\r\n          you have multiple routes, but you want only one\r\n          of them to render at a time\r\n        */}\r\n              <Switch>\r\n                  <Route exact path=\"/\">\r\n                      <Home />\r\n                  </Route>\r\n\r\n                  <Route exact path=\"/jobs\">\r\n                      <Job />\r\n                  </Route>\r\n                  <Route exact path=\"/about\">\r\n                      <About />\r\n                  </Route>\r\n                  <Route exact path=\"/contact\">\r\n                      <Contact />\r\n                  </Route>\r\n              </Switch>\r\n\r\n              <Footer/>\r\n          </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}